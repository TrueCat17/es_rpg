init python:
	day1__mt_before_questions = True
	signals.add('clock-1-21:30:05', Call('day1__go_to_sleep'))
	
	def day1__mt_questions(character, topic):
		if character is mt and topic == 'Вопросы':
			renpy.call('day1__mt_questions')
	signals.add('conversation', day1__mt_questions)

label day1__go_to_sleep:
	# через некоторое время после выполнения двух квестов играет горн.
	# Если игрок сразу пошел к домику или вернулся после побега, то уже воспроизводится ТОЛЬКО текст возле двери
	$ set_rpg_control(False)
	th "Опять горн. Ужин уже был, значит логично предположить, что это - отбой."
	th "Думаю, нужно идти к домику вожатой. Хотя, что тут думать - она же сказала, что жить буду у неё. Даже ключ дала."
	window hide
	$ set_rpg_control(True)


label day1__mt_end__enter_1:
	$ mt.set_auto(False)
	if mt.location.name == 'house_mt':
		$ me.y += 20
		$ show_character(mt, 'house_mt')
	else:
		$ me.move_to_place(['house_mt', 'sm_bed'], wait_time = 1)
		"Хм. Вожатой тут не оказалось."
		$ show_character(mt, 'houses_1')
		$ mt.move_to_place('mt_bed', wait_time = 0.5)
		"О, а вот и она."

label day1__mt_end__enter_2:
	if mt.location.name != 'house_mt':
		"Ну, проходи тогда!"
		window hide
		$ mt.move_to_place(['house_mt', 'mt_bed'], wait_time = 0.5)
		$ me.move_to_place(['house_mt', 'sm_bed'], wait_time = 0.5)

label day1__mt_end:
	$ set_rpg_control(False)
	
	if escape_choice != 2:
		"Только сейчас я понял кое-что немного странное."
		th "Хм... А почему меня поселили в одном домике с вожатой?"
		th "Даже если больше нету мест, намного логичнее поселиться двум вожатым в одном домике и двум пионерам, тоже в одном."
		th "Даже если они из разных отрядов."
		th "Хотя... что уж мне мудрить, будто бы я в пионер-лагерях всю жизнь провёл."
		call day1__mt_end__enter_1
		mt "Семён! Ты чего так пугаешь?"
		$ me.set_direction(to_right)
		me "Я? Ну, как же..."
		mt "А... прости, забыла, что ты у меня."
		$ me.set_direction(to_forward)
	else:
		th "Ну, удачи..."
		call day1__mt_end__enter_1
		mt "Семён! Вот ты где! А где ты пропадал?"
		$ me.set_direction(to_right)
		me "А... я..."
		mt "Ну-у?"
		$ me.set_direction(to_forward)
		me "Хотел в лесу погулять, заблудился... заснул, просыпаюсь - уже потемнело... вот и..."
		"Ольга Дмитриевна вздохнула."
		mt "Вот чесслово, был бы ты помладше, и было бы у меня настроение - всыпала бы по первое число!"
		me "Извини, кхм. Больше не повторится. Надеюсь."
		"Вожатая вздохнула ещё раз."
		mt "Ладно уж, горе-путешественник, что с тебя возьмёшь..."
		th "Вот это пронесло..."
	call day1__mt_end__enter_2
	
	mt "Как ты понял, твоя кровать слева. И давай сразу договоримся: никаких глупостей."
	me "Ты про что?"
	mt "Ты-то лучше знаешь! Переодеваться вожатой вашей больше негде, так что лучше стучи перед входом."
	me "Хорошо... Хотя лучше не забывай закрывать дверь. К вожатой кто угодно может прийти в любой момент."
	"..."
	
	"Спустя пару секунд молчания вожатая снова заговорила."
	$ mt.set_direction(to_left)
	mt "Как я поняла, мыла, полотенца и зубной щётки и пасты у тебя нет?"
	$ me.set_direction(to_right)
	me "Неа."
	mt "Что с тобой поделаешь. Ладно, сейчас что-нибудь поищу..."
	
	$ mt.move_to_place('cupboard')
	$ mt.set_direction(to_right)
	pause 1
	mt "Вот."
	$ mt.set_direction(to_left)
	pause 0.3
	$ me.move_to_place(['house_mt', 'cupboard', (-30, 0)])
	$ me.set_direction(to_right)
	extend " Тебе до конца смены хватит."
	$ inventory.add('soap', 1)
	$ inventory.add('tooth_paste_and_brush', 1)
	me "Спасибо."
	mt "На здоровье."
	$ mt.set_direction(to_right)
	
	th "Думаю, сейчас можно задать пару вопросов, пока она ещё не легла спать."
	me "Оль... Ольга Дмитриевна?"
	mt "Да-да?"
	
	$ mt.spec_topics.append('Вопросы')
	
	menu:
		"Нет, ничего":
			me "А, ничего. Извини."
			mt "Точно?"
			window hide
			$ set_rpg_control(True)
			# (пока игрок не подошел к двери и не ушёл, к ней можно подойти и спросить всё, что надо)
		"У меня есть некоторые вопросы":
			call day1__mt_questions

label day1__mt_questions:
	$ set_rpg_control(False)
	$ me.rotate_to(mt)
	
	if day1__mt_before_questions:
		$ day1__mt_before_questions = False
		me "Я хотел у... тебя кое-что спросить."
		me "Насчёт лагеря. Он немного... необычный."
		mt "Странно, что тебе об этом не сказали, когда ты сюда ехал. Ну, не суть."
		th "Было бы кому говорить."
		mt "Дело в том, что в \"Совёнок\" попадают только самые талантливые и примерные дети. Да, о некоторых по их поведению так не скажешь, но почти всегда дома они ведут себя иначе."
		th "Пхах. В таком случае ещё больше непонятно, за какие заслуги меня сюда запихнули"
		mt "Из-за этого наш лагерь особенный, не такой, как все. Даже \"Артек\"."
		mt "Ну, так что ты именно хотел спросить?"
	
	menu:
		"Почему мы живем вместе" if 'mt_question1' not in was else None:
			$ was.append('mt_question1')
			me "Я подумал, странно, что пионера с вожатым поселили. Обычно же, даже если нету места, то селят вожатых с вожатыми, а детей с детьми?"
			th "Детей, хах..."
			"Ольга Дмитриевна сделала слегка задумчивое лицо."
			mt "А какая разница? Ну, если тебе не нравится моя компания, то ты можешь поискать кого-то другого, но вряд ли у тебя что-то выйдет."
			mt "В нашем отряде уже все разбились по парам, а единственный отряд, где тоже вожатый с пионером живет, это младший."
			mt "Будешь с десятилетним карапузом о светлом будущем по ночам говорить?"
			th "В принципе, исчерпывающий ответ."
			me "Ладно, я понял. Мне и здесь хорошо."
			mt "То-то же. Что-то ещё?"
		"Домики тут необычные" if 'mt_question2' not in was else None:
			$ was.append('mt_question2')
			me "В других лагерях почти всегда корпуса, в каждом из которых много людей живет. А тут везде что ли двухместные?"
			mt "Нет. В некоторых отрядах, в основном младших, домики немного объёмнее, и кровати там двухъярусные."
			mt "А вообще, здесь так сделали по техническим причинам. Вроде, в то время, когда этот лагерь строили, в этом районе были небольшие землетрясения."
			mt "А вот такие домики-\"бочки\", в отличие от больших корпусов, почти не получают от них урона. В крайнем случае, немного покосятся."
			mt "И даже если такое случилось бы, травмы людей были бы минимальны."
			mt "Но, к счастью, землетрясений уже больше десяти лет как нет."
		"В лагере мало людей" if 'mt_question3' not in was else None:
			$ was.append('mt_question3')
			me "Ну, может мне показалось, но в лагере не очень много людей. Да и в отряде всего восемь... девять человек."
			mt "Как я говорила, сюда попадают только лучшие из лучших. И хотя кандидатов намного больше, по решению начальства в лагере именно столько мест, сколько есть."
		"Тут красивая природа" if 'mt_question4' not in was else None:
			$ was.append('mt_question4')
			me "Звучит немного странно, но природа здесь - будто нарисованные пейзажи."
			mt "Нет, не странно. В нашей стране везде красиво, но, знаешь, даже я удивилась, когда впервые здесь оказалась."
			mt "Для такого лагеря и место выбрали особенно."
		"Свободное расписание" if 'mt_question5' not in was else None:
			$ was.append('mt_question5')
			me "Ещё. Ты меня сегодня почти не контролировала, да и все тут, похоже, довольно свободно себя чувствуют."
			"Ольга слегка рассмеялась."
			mt "А что, хочется жёсткой дисциплины и расписания обычного лагеря? Не вопрос, можем хоть с завтрашнего дня начать."
			th "Зря спросил. Ой зря..."
			mt "Ладно, не пугайся. Да, хотя опять же, Совёнок - как другой мир, в этом году с этим ещё необычнее."
			mt "Дело в том, что сверху решили провести экспериментальное исследование об интересах пионеров, что они будут делать, если предоставить им больше свободы, и всё в этом духе."
			mt "Лично мне это совсем не по душе. Посуди сам: заплутает кто-нибудь, на линейку опоздает, ногу подвернёт где-нибудь или проспит - а за всё с вожатых спрашивают!"
			me "Да уж... постараюсь не приносить проблем."
			th "Кто знает, сколько я здесь пробуду. Да и, в любом случае, хорошие отношения с вожатой не помешают."
			mt "Спасибо. Но это не значит, что можно целый день шляться непонятно где! С утра по-прежнему зарядка, линейка и всё остальное, как положено. Расписание подробнее завтра с утра скажу."
	
	python:
		for i in range(5):
			if ('mt_question' + str(i + 1)) not in was:
				break
		else:
			mt.spec_topics.remove('Вопросы')
	
	window hide
	$ set_rpg_control(True)
