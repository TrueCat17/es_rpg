Столы в столовой разделены по след. принципу:
* справа (r, только они расположены "горизонтально")
* по центру (c)
* "по краю" (e)


e10 e12 e14
e09 e11 e13 r7-r8-r9

e08 c04 c02
e07 c03 c01 r4-r5-r6

e06 e04 e02
e05 e03 e01 r1-r2-r3


Столы для отряда ГГ - r4 (dv, us), r5 (un, mi, sl), r6 (mz, el, sh)
Для вожатых - r1, r2, r3 (но взрослых только 2 - ОД и Виола, за столом r2)

r7, r8 и r9, а также все центральные столы никем не заняты

За "крайними" столами сидят "фоновые" пионеры

Если не сказано обратного, то под "временем" будет подразумеваться игровое время, а не реальное


----------


Объект canteen (столовая) имеет след. функции:

* canteen.init() - инициализация (установка вызова разных функций на нужные времена)
* canteen.limit() - ограничить вход в столовую
* canteen.unlimit() - убрать ограничения
* canteen.set_full() - установить звуки заполненной людьми столовой
* canteen.set_half() - звуки полупустой столовой
* canteen.set_empty() - пустой

* canteen.get_table() - получить название ближайшего стола вроде "r4" (обычно используется, когда ГГ сидит за ним)

* canteen.is_sit(character) - узнать, сидит ли character за своим местом в столовой (True) или нет (False)

* canteen.wait(sl, un, timeout = 1e9) - ждать до тех пор, пока все указанные персонажи (в любом количестве)
не сядут за свои места или пока не истечёт время (в реальных секундах, 1e9 = 10^9, по смыслу - "бесконечно")
* canteen.clear_wait() - очистить список ожидаемых персонажей, и тем самым дать им возможность покинуть столовую
Вызывается автоматически после окончания разговоров

* canteen.finished(character) - узнать, закончил ли персонаж character приём пищи (кстати, wait не ждёт таких персонажей)
* canteen.finished_any(sl, un) - закончил ли приём пищи хоть 1 из указанных персонажей
* canteen.finished_all(sl, un) - закончили ли приём пищи ВСЕ указанные персонажи


----------


Также есть свойства:

* canteen.enable - включена ли столовая
При False в неё никто не пойдёт обедать, но включать/отключать нужно до звука горна, т. е. за 15 минут по игровому времени

* canteen.hours = [8, 12, 16, 20] - массив из часов для приёма пищи
Изменять имеет смысл до вызова canteen.init()

* canteen.skip_chances - словарь (dict), в котором указаны шансы пропуска пищи для часов
{
	None: 0.05, # по умолчанию
	16: 0.20, # в 16 часов (для полдника)
}

* canteen.horn_time_preparing = 15 * 60 - время в секундах, до которого будет звучать горн

* canteen.min_time_for_react = 4 * 60 - минимальное время реакции на горн (все персонажи отправляются на площадь)
* canteen.max_time_for_react = 6 * 60 - максимальное...
* canteen.min_time_for_crowding = 9 * 60 - минимальное время для "хождения в толпе" у входа столовой
* canteen.max_time_for_crowding = 11 * 60 - максимальное...


* canteen.crowding_conversation_dist = 40 - расстояние, на котором 2 пионера из толпы могут "разговаривать"
* canteen.crowding_place_xsize = -350 - ширина места перед входом в столовую, где будет толпа (< 0 - влево от входа)
* canteen.crowding_place_ysize = 200 - высота

* canteen.skip_chance_after_moving = 0.05 - шанс, что пионер, дойдя до своего места, сразу уйдёт из столовой
(для основных персонажей - только из списка canteen.not_need, см. далее)

* canteen.min_time_for_eating =  3 * 60 - минимальное время, которое будет потрачено на еду
* canteen.max_time_for_eating = 10 * 60 - максимальное...


----------


Свойства, влияющие на основных персонажей (отряд ГГ):

* canteen.no_skip_hours = [8, 12, 20] - часы, в которые основным персонажам нельзя пропускать приём пищи
Устанавливается перед вызовом canteen.init()

Списки персонажей (устанавливаются перед каждым горном в столовую согласно нуждам сценария):
* canteen.not_eat - не пойдут в столовую вообще
* canteen.not_need - могут пропустить приём пищи (но не обязаны это делать)
* canteen.fast_eat - быстро поедят и уйдут

* canteen.fast_eat_time = 3.0 - время в реальных секундах, которое персонажи из fast_eat будут сидеть за столом


----------


Метка (label) имеет вид day1__canteen__table-5-time12h
day1 - в 1 день
5 - стол r5
12 - в 12 часов

Перед вызовом метки управление персонажем автоматически убирается
После - возвращается, а также скрывается диалоговое окно


Примеры:

label day1__canteen__table-5-time12h:
	"Я решил поесть за столом посередине."


label day1__canteen__table-4-time20h:
	if canteen.is_sit(dv) or canteen.is_sit(us):
		"За столом я был не один."
	else:
		"За столом никого не было."


Пример сложнее, когда в диалоге участвуют персонажи, которых нужно дождаться (о метке canteen_no_conversation см. далее):

label day1__canteen__table-5-time20h:
	if canteen.finished_any(sl, un): # если как минимум 1 из нужных персонажей уже ушёл
		call canteen_no_conversation
		return
	
	$ canteen.wait(sl, un)
	
	"Передо мной сидели Славя и Лена."
	sl "Мику опять не пришла?"
	un "Похоже на то..."
	me "А Мику - это кто?"


Пример для случая, когда сценарий содержит несколько "веток", и если 1 из них невозможна
(из-за невыполнения условий или из-за того, что кто-то уже поел и ушёл), то нужно попытаться проверить следующую:

label day1__canteen__table-5-time20h:
	if 'sl_help' in was and not canteen.finished_any(sl, un):
		$ canteen.wait(sl, un)
		
		"Длинный диалог"
		extend " со Славей и Леной,"
		extend " открывающийся,"
		extend " если строка 'sl_help'"
		extend " была добавлена в массив was."
		return # досрочный выход из метки
	
	# дальше может быть ещё несколько таких "веток" с условиями
	
	# и если все ветки невыполнимы
	call canteen_no_conversation

Ну или в конце можно просто написать ту часть сценария, которая не требует никаких условий и персонажей (если такая есть)


В метке canteen_no_conversation говорится, что или за столом никого нет,
или они сосредоточенно едят (с учётом числа и полов сидящих за этим столом пионеров),
о чём-то думая, и ГГ не хочет их отвлекать
